//-----------------------------------------------------------------------------
// File : StructuredBuffer.h
// Desc : Structured Buffer Module.
// Copyright(c) Pocol. All right reserved.
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
// Includes
//-----------------------------------------------------------------------------
#include <d3d12.h>
#include <ComPtr.h>
#include <ResourceUploadBatch.h>


//-----------------------------------------------------------------------------
// Forward Declarations.
//-----------------------------------------------------------------------------
class DescriptorHandle;
class DescriptorPool;


///////////////////////////////////////////////////////////////////////////////
// StructuredBuffer class
///////////////////////////////////////////////////////////////////////////////
class StructuredBuffer
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    /* NOTHING */

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    StructuredBuffer();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~StructuredBuffer();

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice         デバイスです.
    //! @param[in]      pPool           ディスクリプタプールです.
    //! @param[in]      count           要素数です.
    //! @param[in]      stride          構造体サイズです.
    //! @param[in]      pInitData       初期化データです.
    //! @param[out]     batch           更新バッチです. バッファの更新に必要なデータを格納します.
    //! @retval true    初期化に成功.
    //! @retval fasle   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(
        ID3D12Device*                   pDevice,
        DescriptorPool*                 pPool,
        size_t                          count,
        size_t                          stride,
        const void*                     pInitData,
        DirectX::ResourceUploadBatch&   batch);

    //-------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice         デバイスです.
    //! @param[in]      pPool           ディスクリプタプールです.
    //! @param[in]      size            バッファサイズです.
    //! @param[in]      stride          構造体サイズです.
    //! @retval true    初期化に成功.
    //! @retval fasle   初期化に失敗.
    //-------------------------------------------------------------------------
    bool Init(
        ID3D12Device*                   pDevice,
        DescriptorPool*                 pPool,
        size_t                          size,
        size_t                          stride);

    //-------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //-------------------------------------------------------------------------
    void Term();

    //-------------------------------------------------------------------------
    //! @brief      リソースを取得します.
    //-------------------------------------------------------------------------
    ID3D12Resource* GetResource() const;

    //-------------------------------------------------------------------------
    //! @brief      CPUディスクリプタハンドルを取得します.
    //!
    //! @return     CPUディスクリプタハンドルを返却します.
    //-------------------------------------------------------------------------
    D3D12_CPU_DESCRIPTOR_HANDLE GetHandleCPU() const;

    //-------------------------------------------------------------------------
    //! @brief      GPUディスクリプタハンドルを取得します.
    //!
    //! @return     GPUディスクリプタハンドルを返却します.
    //-------------------------------------------------------------------------
    D3D12_GPU_DESCRIPTOR_HANDLE GetHandleGPU() const;

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    ComPtr<ID3D12Resource>  m_pResource;
    DescriptorPool*         m_pPool;
    DescriptorHandle*       m_pHandle;

    //=========================================================================
    // private methods.
    //=========================================================================
    /* NOTHING */
};
